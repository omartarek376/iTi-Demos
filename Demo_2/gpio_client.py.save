import grpc
import gpio_service_pb2
import gpio_service_pb2_grpc
import time

def set_gpio_output(stub, pin, state):
    stub.SetOutput(gpio_service_pb2.SetOutputRequest(pin=pin, state=state))

def set_gpio_mode(stub, pin, mode):
    stub.ConfigurePin(gpio_service_pb2.ConfigurePinRequest(pin=pin, mode=mode))

def run_client():
    channel = grpc.insecure_channel('localhost:50051')
    stub = gpio_service_pb2_grpc.GPIOServiceStub(channel)

    # Example usage:
    pin = 26  # Replace with your GPIO pin number

    # Configure GPIO pin as output
    set_gpio_mode(stub, pin, gpio_service_pb2.ConfigurePinRequest.OUTPUT)

    # Toggle pin state every 0.5 seconds
    while True:
        set_gpio_output(stub, pin, True)  # Set pin to HIGH
        time.sleep(0.5)
        set_gpio_output(stub, pin, False)  # Set pin to LOW
        time.sleep(0.5)

if __name__ == '__main__':
    run_client()
